setwd("~/Dropbox/sdu/clustering/code/workshopR/files")
v <- c(1, 2, 3)
v <- c(v, 4)
v
w <- c(5, 6, 7, 8)
v <- c(v, w)
v
v <- c(1, 2, 3)
v[10] <- 10
v
append(1:10, 99, after = 5)
append(1:10, 99, after = 0)
append(1:10, 99, 98, after = 0)
append(1:10, 99, after = 0)
(1:6) + (1:3)
cbind(1:6)
cbind(1:3)
cbind(1:6, 1:3)
(1:6) + (1:5)
(1:6) + 10
f <- factor(c("Sejr", "Sejr", "Nederlag", "Uafgjort", "Sejr", "Nederlag"))
f
f
wday <- c("Ons", "Tor", "Man", "Ons", "Tor", "Tor", "Tor", "Tir", "Tor", "Tir")
f <- factor(wday)
f
f <- factor(wday, c("Man", "Tir", "Ons", "Tor", "Fre"))
f
fy <- c(0.60, 0.35, 0.44, 0.62, 0.60)
sy <- c(0.70, 0.61, 0.63, 0.87, 0.85, 0.70, 0.64)
sy <- c(0.70, 0.61, 0.63, 0.87, 0.85, 0.70, 0.64)
ty <- c(0.76, 0.71, 0.92, 0.87)
comb <- stack(list(first = fy, second = sy, third = ty))
comb
aov(values ~ ind, data = comb)
mylist <- list()
mylist[[1]] <- 3.14
mylist[[2]] <- "Buh"
mylist[[3]] <- c(1, 1, 2, 3)
mylist[[4]] <- mean
mylist <- list(mid = 0.5, right = 0.841, far.right = 0.977)
mylist
years <- list(1960, 1964, 1976, 1994)
years
years[[1]]
years[c(1, 2)]
years[c(1, 2)]
years[[1]]
years[c(1, 2)]
class(years[[1]])
class(years[1])
years[1]
years[[1]]
years <- list(Kennedy = 1960, Johnson = 1964, Carter = 1976, Clinton = 1994)
years[["Kennedy"]]
years$Kennedy
years[c("Kennedy", "Johnson")]
years["Carter"]
years[c("Kennedy", "Johnson")]
years[c("Kennedy", "Johnson")]
years[["Kennedy"]]
years$Kennedy
years$1
years$Kennedy
years[c("Kennedy", "Johnson")]
years["Carter"]
mylist <- list(far.left = 0.023, left = 0.159, mid = 0.500, right = 0.841, far.right = 0.977)
mylist
mylist <- list()
mylist$far.left <- 0.023
mylist$left <- 0.159
mylist$mid <- 0.500
mylist$right <- 0.841
mylist$far.right <- 0.977
names <- c("far.left", "left", "mid", "right", "far.right")
values <- pnorm(-2:2)
mylist <- list()
mylist[names] <- values
mylist
values <- pnorm(-2:2)
values
?pnorm
years <- list(Kennedy = 1960, Johnson = 1964, Carter = 1976, Clinton = 1994)
years
years[["Johnson"]] <- NULL
years
years[c("Carter", "Clinton")] <- NULL
years
iq.scores <- list(89.73383, 116.5565, 113.0454)
mean(iq.scores)
mean(iq.scores)
mean(unlist(iq.scores))
mylist <- list("Hej", NULL, "dig")
mylist
mylist[sapply(mylist, is.null)] <- NULL
mylist
dat <- c(1.1, 1.2, 2.1, 2.2, 3.1, 3.2)
mat <- matrix(dat, 2, 3)
mat
dat <- c(1.1, 1.2, 2.1, 2.2, 3.1)
mat <- matrix(dat, 2, 3)
mat
matrix(0, 2, 3)
matrix(NA, 2, 3)
matrix(0, 2, 3)
mat <- matrix(c(1.1, 1.2, 1.3, 2.1, 2.2, 2.3), 2, 3)
dat <- c(1.1, 1.2, 1.3,
2.1, 2.2, 2.3)
mat <- matrix(c(1.1, 1.2, 1.3, 2.1, 2.2, 2.3), 2, 3)
mat <- matrix(dat, 2, 3, byrow = TRUE)
mat
mat <- matrix(c(1.1, 1.2, 1.3,
2.1, 2.2, 2.3),
2, 3, byrow = TRUE)
mat
dat <- c(1.1, 1.2, 1.3,
2.1, 2.2, 2.3)
mat <- matrix(dat, 2, 3, byrow = TRUE)
dat <- c(1.1, 1.2, 1.3, 2.1, 2.2, 2.3)
dat
dim(dat) <- c(2, 3)
dat
A <- matrix(c(9, -8, -2, 7, 4, 4), 3, 2)
A
B <- matrix(c(0, -11, 5, -7, 3, 6), 3, 2)
B
t(B)
A %*% t(B)
X <- matrix(c(25, -2, 4, -2, 4, 1, 4, 1, 9), 3, 3)
X
sum(diag(X))
combn(1:5, 3)
combn(c("B1", "B2", "B3", "B4", "B5"), 3)
runif(1)
runif(1)
runif(10)
rnorm(1)
rnorm(1)
runif(1, min = -3, max = 3)
rnorm(1)
rnorm(1, mean = 100, sd = 15)
rnorm(1)
rnorm(1)
rnorm(1)
rnorm(1)
runif(1, min = -3, max = 3)
rnorm(1, mean = 100, sd = 15)
rbinom(1, size = 10, prob = 0.5)
rpois(1, lambda = 10)
runif(100)
runif(1)
rnorm(1)
rnorm(1, mean = 100, sd = 15)
rnorm(1, mean = 100, sd = 15)
rnorm(1, mean = 100, sd = 15)
rnorm(1, mean = 100, sd = 15)
rnorm(1, mean = 100, sd = 15)
rnorm(1, mean = 100, sd = 15)
rnorm(1, mean = 100, sd = 15)
rnorm(1, mean = 100, sd = 15)
rnorm(1, mean = 100, sd = 15)
rnorm(1, mean = 100, sd = 15)
rnorm(1, mean = 100, sd = 15)
rnorm(1, mean = 100, sd = 15)
plot(rnorm(100))
hist(rnorm(100))
hist(rnorm(100000))
hist(rnorm(1000000))
set.seed(42)
v <- set.seed(42)
v
set.seed(42)
runif(15)
runif(15)
library(Lahman)
install.packages("Lahman")
ws <- subset(BattingPost, round == "WS" & yearID >= 1903)
library(Lahman)
ws <- subset(BattingPost, round == "WS" & yearID >= 1903)
sample(ws$yearID, 10)
sample(ws$yearID, 10, replace = TRUE)
BattingPost
sample(ws$yearID, 10, replace = TRUE)
sample(ws$yearID, 10, replace = TRUE)
sample(ws$yearID, 10, replace = TRUE)
sample(ws$yearID, 10, replace = TRUE)
sample(ws$yearID, 10, replace = TRUE)
sample(c("P", "K"), 10, replace = TRUE)
sample(c("P", "K"), 10, replace = TRUE)
sample(c("P", "K"), 10, replace = TRUE)
sample(c("P", "K"), 10, replace = TRUE)
sample(c("P", "K"), 10)
sample(c("P", "K"), 10, replace = TRUE)
sample(1:10)
sample(1:10)
sample(1:10)
sample(1:10)
dbinom(7, size = 10, prob = 0.5)
pbinom(7, size = 10, prob = 0.5)
x <- seq(from = -3, to = +3, length.out = 100)
plot(x, dnorm(x))
x <- seq(from = 0, to = 6, length.out = 100)
par(mfrow = c(2, 2))
plot(x, dunif(x, min = 2, max = 4), main = "Uniform", type = "l", ylim = c(0, 0.6))
plot(x, dnorm(x, mean = 3, sd = 1), main = "Normal", type = "l", ylim = c(0, 0.6))
plot(x, dexp(x, rate = 1/2), main = "Eksponential", type = "l", ylim = c(0, 0.6))
plot(x, dgamma(x, shape = 2, rate = 1), main = "Gamma", type = "l", ylim = c(0, 0.6))
x <- seq(from = -3, to = +3, length.out = 100)
y <- dnorm(x)
plot(x, y, main="Standardnormalfordeling", type = "l", xlab = "Kvartil", ylab = "T?thed")
plot(x, y, main="Standardnormalfordeling", type = "l", xlab = "Kvartil", ylab = "T?thed")
abline(h = 0)
region.x <- x[1 <= x & x <= 2]
region.y <- y[1 <= x & x <= 2]
region.x <- c(region.x[1], region.x, tail(region.x, 1))
region.y <- c(0, region.y, 0)
polygon(region.x, region.y, density = 10)
polygon(region.x, region.y, density = -1, col = "red")
plot(cars)
plot(cars)
plot(cars,
main = "Biler: Hastighed versus bremsel?ngde (1920)",
xlab = "Hastighed (miles i timen)",
ylab = "Bremsel?ngde (fod)")
plot(cars, ann = FALSE)
title(main = "Biler: Hastighed versus bremsel?ngde (1920)", xlab = "Hastighed (miles i timen)", ylab = "Bremsel?ngde (fod)")
plot(cars,
main = "Biler: Hastighed versus bremselængde (1920)",
xlab = "Hastighed (miles i timen)",
ylab = "Bremselængde (fod)")
plot(cars,
main = "Biler: Hastighed versus bremselængde (1920)",
xlab = "Hastighed (miles i timen)",
ylab = "Bremselængde (fod)")
plot(cars, ann = FALSE)
title(main = "Biler: Hastighed versus bremsel?ngde (1920)", xlab = "Hastighed (miles i timen)", ylab = "Bremsel?ngde (fod)")
plot(cars,
main = "Biler: Hastighed versus bremsel?ngde (1920)",
xlab = "Hastighed (miles i timen)",
ylab = "Bremsel?ngde (fod)",
type = "n")
grid()
points(cars)
plot(cars,
main = "Biler: Hastighed versus bremsel?ngde (1920)",
xlab = "Hastighed (miles i timen)",
ylab = "Bremsel?ngde (fod)",
type = "n")
points(cars)
grid()
plot(cars,
main = "Biler: Hastighed versus bremsel?ngde (1920)",
xlab = "Hastighed (miles i timen)",
ylab = "Bremsel?ngde (fod)",
type = "n")
grid()
points(cars)
with(iris, plot(Petal.Length, Petal.Width, xlab = "Kronbladl?ngde", ylab = "Kronbladbredde"))
with(iris, plot(Petal.Length, Petal.Width, xlab = "Kronbladl?ngde", ylab = "Kronbladbredde", pch = as.integer(Species)))
head(iris)
plot(iris[,1:4])
cor(iris[,1:4])
cor(iris[,1:4])
plot(iris[,1:4])
head(iris)
plot(iris[,1:4])
head(iris)
plot(iris[,1:4])
?cor
coplot(Horsepower ~ MPG.city | Origin, data = Cars93, xlab = "Miles per gallon i byen", ylab = "Hestekr?fter")
library(MASS)
coplot(Horsepower ~ MPG.city | Origin, data = Cars93, xlab = "Miles per gallon i byen", ylab = "Hestekr?fter")
heights <- tapply(airquality$Temp, airquality$Month, mean)
barplot(heights)
barplot(heights,
main = "Middeltemperatur per m?ned",
names.arg = c("Maj", "Jun", "Jul", "Aug", "Sep"),
ylab = "Temperatur (grader Fahrenheit)")
barplot(heights)
barplot(heights,
main = "Middeltemperatur per m?ned",
names.arg = c("Maj", "Jun", "Jul", "Aug", "Sep"),
ylab = "Temperatur (grader Fahrenheit)")
heights <- tapply(airquality$Temp, airquality$Month, mean)
barplot(heights)
barplot(heights,
main = "Middeltemperatur per m?ned",
names.arg = c("Maj", "Jun", "Jul", "Aug", "Sep"),
ylab = "Temperatur (grader Fahrenheit)")
barplot(heights)
barplot(heights,
main = "Middeltemperatur per m?ned",
names.arg = c("Maj", "Jun", "Jul", "Aug", "Sep"),
ylab = "Temperatur (grader Fahrenheit)")
heights <- tapply(airquality$Temp, airquality$Month, mean)
heights <- tapply(airquality$Temp, airquality$Month, mean)
barplot(heights)
barplot(heights,
main = "Middeltemperatur per m?ned",
names.arg = c("Maj", "Jun", "Jul", "Aug", "Sep"),
ylab = "Temperatur (grader Fahrenheit)")
library(gplots)
attach(airquality)
heights <- tapply(Temp, Month, mean)
lower <- tapply(Temp, Month, function(v) t.test(v)$conf.int[1])
upper <- tapply(Temp, Month, function(v) t.test(v)$conf.int[2])
barplot2(heights, plot.ci = TRUE, ci.l = lower, ci.u = upper)
barplot2(heights, plot.ci = TRUE, ci.l = lower, ci.u = upper,
ylim = c(50, 90), xpd = FALSE,
main = "Middeltemperatur per m?ned",
names.arg = c("Maj", "Jun", "Jul", "Aug", "Sep"),
ylab = "Temperatur (grader Fahrenheit)")
library(gplots)
attach(airquality)
library(gplots)
attach(airquality)
install.packages("gplots")
library(gplots)
heights <- tapply(Temp, Month, mean)
lower <- tapply(Temp, Month, function(v) t.test(v)$conf.int[1])
upper <- tapply(Temp, Month, function(v) t.test(v)$conf.int[2])
barplot2(heights, plot.ci = TRUE, ci.l = lower, ci.u = upper)
barplot2(heights, plot.ci = TRUE, ci.l = lower, ci.u = upper)
barplot2(heights, plot.ci = TRUE, ci.l = lower, ci.u = upper,
ylim = c(50, 90), xpd = FALSE,
main = "Middeltemperatur per m?ned",
names.arg = c("Maj", "Jun", "Jul", "Aug", "Sep"),
ylab = "Temperatur (grader Fahrenheit)")
dfrm <- read.table("statisticians2.txt", header = TRUE, stringsAsFactor = FALSE)
dfrm
