// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

// cppTransClustFile
List cppTransClustFile(std::string filename, std::string file_type, List params);
RcppExport SEXP _transclustr_cppTransClustFile(SEXP filenameSEXP, SEXP file_typeSEXP, SEXP paramsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< std::string >::type filename(filenameSEXP);
    Rcpp::traits::input_parameter< std::string >::type file_type(file_typeSEXP);
    Rcpp::traits::input_parameter< List >::type params(paramsSEXP);
    rcpp_result_gen = Rcpp::wrap(cppTransClustFile(filename, file_type, params));
    return rcpp_result_gen;
END_RCPP
}
// cppTransClustDist
List cppTransClustDist(NumericVector sim_matrix_1d, unsigned num_o, List params);
RcppExport SEXP _transclustr_cppTransClustDist(SEXP sim_matrix_1dSEXP, SEXP num_oSEXP, SEXP paramsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type sim_matrix_1d(sim_matrix_1dSEXP);
    Rcpp::traits::input_parameter< unsigned >::type num_o(num_oSEXP);
    Rcpp::traits::input_parameter< List >::type params(paramsSEXP);
    rcpp_result_gen = Rcpp::wrap(cppTransClustDist(sim_matrix_1d, num_o, params));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_transclustr_cppTransClustFile", (DL_FUNC) &_transclustr_cppTransClustFile, 3},
    {"_transclustr_cppTransClustDist", (DL_FUNC) &_transclustr_cppTransClustDist, 3},
    {NULL, NULL, 0}
};

RcppExport void R_init_transclustr(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
